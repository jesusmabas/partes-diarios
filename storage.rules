rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Regla por defecto: denegar todo
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Reglas para facturas (invoices)
    match /invoices/{fileName} {
      // Lectura: Cualquier usuario autenticado puede leer facturas
      allow read: if request.auth != null;
      
      // Escritura: Validar formato de archivo, tamaño y prefijo de nombre
      allow write: if request.auth != null && 
                     // Validar que el nombre tiene un formato válido (prefijo_fecha_uuid)
                     fileName.matches('^[^_]+_[0-9]{4}-[0-9]{2}-[0-9]{2}.*$') &&
                     // Validar tipo de archivo (PDF)
                     request.resource.contentType.matches('application/pdf') &&
                     // Limitar tamaño a 10MB
                     request.resource.size < 10 * 1024 * 1024;
      
      // Permitir eliminación si el usuario está autenticado
      // En un escenario ideal, verificaríamos si es el propietario, pero 
      // no podemos consultar Firestore directamente desde las reglas de Storage
      allow delete: if request.auth != null;
    }
    
    // Reglas para fotos
    match /photos/{fileName} {
      // Lectura: Cualquier usuario autenticado puede ver fotos
      allow read: if request.auth != null;
      
      // Escritura: Validar formato, tamaño y prefijo de nombre
      allow write: if request.auth != null && 
                     // Validar que el nombre tiene un formato válido (prefijo_fecha_uuid)
                     fileName.matches('^[^_]+_[0-9]{4}-[0-9]{2}-[0-9]{2}.*$') &&
                     // Validar tipo de archivo (imágenes)
                     request.resource.contentType.matches('image/.*') &&
                     // Limitar tamaño a 5MB
                     request.resource.size < 5 * 1024 * 1024;
      
      // Permitir eliminación si el usuario está autenticado
      allow delete: if request.auth != null;
    }
  }
}